------------------------------------------------------------------------
			  SASAbus DB-Schema
------------------------------------------------------------------------

The schema of the SASAbus SQLite database is composed by 6 tables:
linee, linee_corse, orari_passaggio, paline, and android_metadata. The
first 4 tables host the data coming from 4 CSV files that SASA
S.p.A./AG made available.

The current SASAbus database (zipped) and its MD5 checksum file can
be found here:

(testversions)
http://www.mowiso.com/SASAbus.db.zip
http://www.mowiso.com/SASAbus.db.md5


(official version)
unknown yet


instead of here:

http://www.sasabz.it/fileadmin/user_upload/KML/SASAbus.db.zip
http://www.sasabz.it/fileadmin/user_upload/KML/SASAbus.db.md5

When downloaded by the SASAbus application, the file is stored in the
following directory on your device:
/sdcard/Android/data/it.sasabz.android.sasabus/db/

Data contained in the compressed SQLite database
SASAbus.db.zip available at the address
http://www.sasabz.it/fileadmin/user_upload/KML, are property of the
SASA SpA-AG and can be used exclusively by the application for the
Android platform SASAbus version 0.1 or following versions.

The usage of these data for other purposes must be autorized in
advance by SASA SpA-AG; in any case the source of data for the usage
or reproduction of graphs, tables or numerical values must be clearly
indicated.


The database is defined by:


-- Table: bacini
CREATE TABLE bacini ( 
    id      INTEGER PRIMARY KEY AUTOINCREMENT,
    nome_de TEXT,
    nome_it TEXT 
);


-- Table: linee
CREATE TABLE linee ( 
    id       INTEGER PRIMARY KEY AUTOINCREMENT,
    abbrev   TEXT,
    descr_it TEXT,
    descr_de TEXT,
    bacinoId INTEGER REFERENCES bacini ( id ) ON DELETE RESTRICT
                                              ON UPDATE RESTRICT,
    num_lin  TEXT 
);


-- Table: validita
CREATE TABLE validita ( 
    da_data DATE,
    a_data  DATE 
);


-- Table: android_metadata
CREATE TABLE android_metadata ( 
    locale TEXT 
);


-- Table: corse
CREATE TABLE corse ( 
    id              INTEGER PRIMARY KEY,
    lineaId         INTEGER REFERENCES linee ( id ) ON DELETE RESTRICT
                                                    ON UPDATE RESTRICT,
    dest_de         TEXT,
    dest_it         TEXT,
    effettuazione   TEXT,
    orario_partenza TEXT 
);


-- Table: paline
CREATE TABLE paline ( 
    id          INTEGER PRIMARY KEY,
    nome_de     TEXT,
    nome_it     TEXT,
    latitudine  REAL,
    longitudine REAL 
);


-- Table: orarii
CREATE TABLE orarii ( 
    id          INTEGER PRIMARY KEY AUTOINCREMENT,
    corsaId     INTEGER REFERENCES corse ( id ) ON DELETE RESTRICT
                                                ON UPDATE RESTRICT,
    palinaId    INTEGER,
    progressivo INTEGER,
    orario      TEXT 
);


-- Index: idx1
CREATE INDEX idx1 ON paline ( 
    nome_de 
);
;

-- Index: idx2
CREATE INDEX idx2 ON orarii ( 
    corsaId 
);
;

-- View: palineProgressive
CREATE VIEW palineProgressive AS
       SELECT p1.id AS dest_id,
              p1.nome_de AS dest_nome_de,
              p1.nome_it AS dest_nome_it,
              o1.orario AS dest_orario,
              p2.id AS part_id,
              p2.nome_de AS part_nome_de,
              p2.nome_it AS part_nome_it,
              o2.orario AS part_orario,
              corse.lineaId AS lineaId,
              corse.effettuazione AS effettuazione
         FROM corse, 
              orarii o1, 
              orarii o2, 
              paline p1, 
              paline p2
        WHERE o1.corsaId = corse.id 
              AND
              o2.corsaId = corse.id 
              AND
              o1.palinaId = p1.id 
              AND
              o2.palinaId = p2.id 
              AND
              o2.progressivo < o1.progressivo;

then called the command analyze orarii for optimizing the queries on the android-phone.
